[
  {
    "objectID": "reports/ojs/index.html",
    "href": "reports/ojs/index.html",
    "title": "ObservableJS in Quarto",
    "section": "",
    "text": "Convert R data.frame to OJS object. This is the only code chunk that is R. All other chunks are ojs.\n\nirism &lt;- iris\ncolnames(irism) &lt;- gsub(\"[.]\",\"_\",tolower(colnames(irism)))\nojs_define(ojsd = irism)\n\nTranspose JS object.\n\nojsdata = transpose(ojsd)\n\n\n\n\n\n\nRaw JSON object.\n\nojsdata"
  },
  {
    "objectID": "reports/ojs/index.html#passing-data",
    "href": "reports/ojs/index.html#passing-data",
    "title": "ObservableJS in Quarto",
    "section": "",
    "text": "Convert R data.frame to OJS object. This is the only code chunk that is R. All other chunks are ojs.\n\nirism &lt;- iris\ncolnames(irism) &lt;- gsub(\"[.]\",\"_\",tolower(colnames(irism)))\nojs_define(ojsd = irism)\n\nTranspose JS object.\n\nojsdata = transpose(ojsd)\n\n\n\n\n\n\nRaw JSON object.\n\nojsdata"
  },
  {
    "objectID": "reports/ojs/index.html#table",
    "href": "reports/ojs/index.html#table",
    "title": "ObservableJS in Quarto",
    "section": "Table",
    "text": "Table\nDisplay as table.\n\nviewof raw_table = Inputs.table(ojsdata)\n\n\n\n\n\n\nComputing a new variable using an arrow function. ... keeps all old variables and the new variable ratio is added.\n\nojsdatamod = ojsdata.map(d =&gt; ({...d, ratio: d.sepal_width / d.petal_width}))\n\n\n\n\n\n\n\nviewof mod_table = Inputs.table(ojsdatamod)"
  },
  {
    "objectID": "reports/ojs/index.html#checkbox-filtering",
    "href": "reports/ojs/index.html#checkbox-filtering",
    "title": "ObservableJS in Quarto",
    "section": "Checkbox filtering",
    "text": "Checkbox filtering\nDefine checkbox input.\n\nviewof grp = Inputs.select([\"setosa\", \"versicolor\", \"virginica\"], {value: [\"setosa\"], multiple: false, label: \"Species\"})\n\n\n\n\n\n\nFilter data based on checkbox inputs.\n\nojsdata_filtered = ojsdata.filter(d =&gt; d.species.includes(grp))\n\n\n\n\n\n\nDisplay filtered data as table.\n\nviewof filtered_table = Inputs.table(ojsdata_filtered)"
  },
  {
    "objectID": "reports/ojs/index.html#scatterplot",
    "href": "reports/ojs/index.html#scatterplot",
    "title": "ObservableJS in Quarto",
    "section": "Scatterplot",
    "text": "Scatterplot\nDisplay a scatterplot. X and Y axes are defined by select inputs.\n\nviewof x = Inputs.select(Object.keys(ojsdata[0]), {value: \"sepal_length\", multiple: false, label: \"X axis\"})\n\n\n\n\n\n\n\nviewof y = Inputs.select(Object.keys(ojsdata[0]), {value: \"sepal_width\", multiple: false, label: \"Y axis\"})\n\n\n\n\n\n\n\nPlot.plot({\n  marks: [\n    Plot.dot(ojsdata, {\n      x: x,\n      y: y,\n      fill: \"species\",\n      title: (d) =&gt;\n        `${d.species} \\n Petal length: ${d.petal_length} \\n Sepal length: ${d.sepal_length}`\n    })\n  ],\n  grid: true\n})"
  },
  {
    "objectID": "reports/ojs/index.html#search",
    "href": "reports/ojs/index.html#search",
    "title": "ObservableJS in Quarto",
    "section": "Search",
    "text": "Search\nSearch through a table.\n\nviewof ojsdata_filtered_search = Inputs.search(ojsdata,\n{ \n  placeholder: \"Search for species\",\n  datalist: ojsdata.map(d =&gt; d.species),\n  label: \"Search for species: \"\n})\n\n\n\n\n\n\n\nviewof filtered_search_table = Inputs.table(ojsdata_filtered_search)"
  },
  {
    "objectID": "reports/ojs/index.html#arquero",
    "href": "reports/ojs/index.html#arquero",
    "title": "ObservableJS in Quarto",
    "section": "Arquero",
    "text": "Arquero\nData wrangling using Arquero.\nImport dependencies and convert data to Arquero format.\n\nimport { aq, op } from '@uwdata/arquero'\nojsdata_aq = aq.from(ojsdata)\n\nojsdata_aq\n  .groupby('species')\n  .filter(p =&gt; p.sepal_length &gt; 5)\n  .rollup({\n    count: op.count(),\n    avg_mass: op.average('sepal_length')\n   })\n  .view()"
  },
  {
    "objectID": "reports/webr/index.html",
    "href": "reports/webr/index.html",
    "title": "webR-enabled code cells",
    "section": "",
    "text": "webR-enabled code cell are established by using {webr-r} in a Quarto HTML document.\nLoading\n  webR..."
  },
  {
    "objectID": "reports/webr/index.html#demo",
    "href": "reports/webr/index.html#demo",
    "title": "webR-enabled code cells",
    "section": "",
    "text": "webR-enabled code cell are established by using {webr-r} in a Quarto HTML document.\nLoading\n  webR..."
  },
  {
    "objectID": "reports/webr/index.html#sample-cases",
    "href": "reports/webr/index.html#sample-cases",
    "title": "webR-enabled code cells",
    "section": "2 Sample cases",
    "text": "2 Sample cases\n\n2.1 Fit a linear regression model\nLoading\n  webR...\n\n\n  \n\n\n\n\n2.2 Create a graph with base R\nLoading\n  webR...\n\n\n  \n\n\n\n\n2.3 Packages\n\n2.3.1 Available Packages\nYou can view what packages are available for webR by either executing the following R code (either with WebR or just R):\nLoading\n  webR...\n\n\n  \n\n\nOr, by navigating to the WebR repository:\nhttps://github.com/r-wasm/webr-repo/blob/main/repo-packages\n\n\n2.3.2 Installing a Package\nInstalling ggplot2 may take at least 2 minutes to run.\nLoading\n  webR...\n\n\n  \n\n\n\n\n2.3.3 Using a Package\nOnce ggplot2 is loaded, then use the package as normal.\nLoading\n  webR...\n\n\n  \n\n\n\n\n\n2.4 Define variables and re-use them in later cells\nLoading\n  webR...\n\n\n  \n\n\nLoading\n  webR...\n\n\n  \n\n\n\n\n2.5 Escape characters in a string\nLoading\n  webR...\n\n\n  \n\n\n\n\n2.6 Anonymous function definition\nLoading\n  webR...\n\n\n  \n\n\n\n\n2.7 Empty code cell\nLoading\n  webR...\n\n\n  \n\n\n\n\n2.8 Prior code cell\n\nLoading\n  webR...\n\n\n  \n\n\n\n\n\n2.9 Pre-rendered code cell\n\nmessage(\"Hello!\")\n\nHello!"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Quarto experiments",
    "section": "",
    "text": "OJS and R in Quarto\n\n\nWebR in Quarto using Quarto webr extension\n\n\nUpdated: 03-05-2023. Quarto v1.3.340"
  }
]